language: c

sudo: required

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq

# the install step will take care of deploying a newer cmake version
# FROM: https://riptutorial.com/cmake/example/4723/configure-travis-ci-with-newest-cmake
# install:    
#   # first we create a directory for the CMake binaries
#   - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
#   - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
#   # we use wget to fetch the cmake binaries
#   - travis_retry wget --no-check-certificate https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz
#   # this is optional, but useful:
#   # do a quick md5 check to ensure that the archive we downloaded did not get compromised
#   - echo "f3546812c11ce7f5d64dc132a566b749 *cmake-3.3.2-Linux-x86_64.tar.gz" > cmake_md5.txt
#   - md5sum -c cmake_md5.txt
#   # extract the binaries; the output here is quite lengthy,
#   # so we swallow it to not clutter up the travis console
#   - tar -xvf cmake-3.3.2-Linux-x86_64.tar.gz > /dev/null
#   - mv cmake-3.3.2-Linux-x86_64 cmake-install
#   # add both the top-level directory and the bin directory from the archive
#   # to the system PATH. By adding it to the front of the path we hide the
#   # preinstalled CMake with our own.
#   - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
#   # don't forget to switch back to the main build directory once you are done
#   - cd ${TRAVIS_BUILD_DIR}

# before_script:
#   # create a build folder for the out-of-source build
#   - mkdir build
#   # switch to build directory
#   - cd build
#   # run cmake; here we assume that the project's
#   # top-level CMakeLists.txt is located at '..'
#   - cmake ..

# script:
#   # once CMake has done its job we just build using make as usual
#   - make
#   # if the project uses ctest we can run the tests like this
#   - make test

# ALSO CHECK: https://github.com/gujans/travis-gtest-cmake-example/blob/master/.travis.yml

install:
  # Install gfortran
  - sudo apt-get install -qq gfortran-7
  - sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-7 90

  # Install git
  - sudo apt install git

  # Use the default version of CMake to build a newer version
  - sudo apt install cmake

  # Download and install a newer version of CMake
  - sudo git clone https://github.com/Kitware/CMake.git
  - pushd CMake
  - sudo mkdir build
  - pushd build
  - sudo cmake -DCMAKE_INSTALL_LIBDIR=$HOME/.local/CMake ..
  - sudo cmake
  - sudo make
  - sudo make install
  - popd
  - popd

# # CMAKE STUFF
#   # first we create a directory for the CMake binaries
#   - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
#   - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
#   # we use wget to fetch the cmake binaries
#   - travis_retry wget --no-check-certificate https://cmake.org/files/v3.3/cmake-3.7.0-Linux-x86_64.tar.gz
#   # this is optional, but useful:
#   # do a quick md5 check to ensure that the archive we downloaded did not get compromised
#   - echo "f3546812c11ce7f5d64dc132a566b749 *cmake-3.7.0-Linux-x86_64.tar.gz" > cmake_md5.txt
#   - md5sum -c cmake_md5.txt
#   # extract the binaries; the output here is quite lengthy,
#   # so we swallow it to not clutter up the travis console
#   - tar -xvf cmake-3.7.0-Linux-x86_64.tar.gz > /dev/null
#   - mv cmake-3.7.0-Linux-x86_64 cmake-install
#   # add both the top-level directory and the bin directory from the archive
#   # to the system PATH. By adding it to the front of the path we hide the
#   # preinstalled CMake with our own.
#   - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
#   # don't forget to switch back to the main build directory once you are done
#   - cd ${TRAVIS_BUILD_DIR}
# # END CMAKE STUFF

  # - sudo apt install cmake

  # Download and install LAPACK
  - sudo git clone https://github.com/Reference-LAPACK/lapack.git
  - pushd lapack
  - sudo mkdir build
  - pushd build
  - sudo cmake -DCMAKE_INSTALL_LIBDIR=$HOME/.local/lapack ..
  - sudo cmake
  - sudo make
  - sudo make install
  - popd
  - popd

  # Download and install FERROR
  - sudo git clone https://github.com/jchristopherson/ferror.git
  - pushd ferror
  - sudo mkdir build
  - pushd build
  - sudo cmake -DCMAKE_INSTALL_LIBDIR=$HOME/.local/ferror ..
  - sudo cmake
  - sudo make
  - sudo make install
  - popd
  - popd

  # Download and install LINALG
  - sudo git clone https://github.com/jchristopherson/linalg.git
  - pushd linalg
  - sudo mkdir build
  - pushd build
  - sudo cmake -DCMAKE_INSTALL_LIBDIR=$HOME/.local/linalg ..
  - sudo cmake
  - sudo make
  - sudo make install
  - popd
  - popd

before_script:
    - mkdir build
    - cd build
    - cmake ..

script: make
